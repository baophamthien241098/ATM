// Code generated by protoc-gen-go. DO NOT EDIT.
// source: ATMpd/atmpd.proto

package ATMpd

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Account struct {
	ID                   string   `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Number               int64    `protobuf:"varint,2,opt,name=Number,proto3" json:"Number,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Account) Reset()         { *m = Account{} }
func (m *Account) String() string { return proto.CompactTextString(m) }
func (*Account) ProtoMessage()    {}
func (*Account) Descriptor() ([]byte, []int) {
	return fileDescriptor_870d51f0d487f6a4, []int{0}
}

func (m *Account) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Account.Unmarshal(m, b)
}
func (m *Account) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Account.Marshal(b, m, deterministic)
}
func (m *Account) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Account.Merge(m, src)
}
func (m *Account) XXX_Size() int {
	return xxx_messageInfo_Account.Size(m)
}
func (m *Account) XXX_DiscardUnknown() {
	xxx_messageInfo_Account.DiscardUnknown(m)
}

var xxx_messageInfo_Account proto.InternalMessageInfo

func (m *Account) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func (m *Account) GetNumber() int64 {
	if m != nil {
		return m.Number
	}
	return 0
}

type MoneyResquest struct {
	Account              *Account `protobuf:"bytes,1,opt,name=Account,proto3" json:"Account,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MoneyResquest) Reset()         { *m = MoneyResquest{} }
func (m *MoneyResquest) String() string { return proto.CompactTextString(m) }
func (*MoneyResquest) ProtoMessage()    {}
func (*MoneyResquest) Descriptor() ([]byte, []int) {
	return fileDescriptor_870d51f0d487f6a4, []int{1}
}

func (m *MoneyResquest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MoneyResquest.Unmarshal(m, b)
}
func (m *MoneyResquest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MoneyResquest.Marshal(b, m, deterministic)
}
func (m *MoneyResquest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MoneyResquest.Merge(m, src)
}
func (m *MoneyResquest) XXX_Size() int {
	return xxx_messageInfo_MoneyResquest.Size(m)
}
func (m *MoneyResquest) XXX_DiscardUnknown() {
	xxx_messageInfo_MoneyResquest.DiscardUnknown(m)
}

var xxx_messageInfo_MoneyResquest proto.InternalMessageInfo

func (m *MoneyResquest) GetAccount() *Account {
	if m != nil {
		return m.Account
	}
	return nil
}

type MoneyResponse struct {
	Number               int64    `protobuf:"varint,1,opt,name=Number,proto3" json:"Number,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MoneyResponse) Reset()         { *m = MoneyResponse{} }
func (m *MoneyResponse) String() string { return proto.CompactTextString(m) }
func (*MoneyResponse) ProtoMessage()    {}
func (*MoneyResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_870d51f0d487f6a4, []int{2}
}

func (m *MoneyResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MoneyResponse.Unmarshal(m, b)
}
func (m *MoneyResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MoneyResponse.Marshal(b, m, deterministic)
}
func (m *MoneyResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MoneyResponse.Merge(m, src)
}
func (m *MoneyResponse) XXX_Size() int {
	return xxx_messageInfo_MoneyResponse.Size(m)
}
func (m *MoneyResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MoneyResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MoneyResponse proto.InternalMessageInfo

func (m *MoneyResponse) GetNumber() int64 {
	if m != nil {
		return m.Number
	}
	return 0
}

type GetMoneyRequest struct {
	ID                   string   `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetMoneyRequest) Reset()         { *m = GetMoneyRequest{} }
func (m *GetMoneyRequest) String() string { return proto.CompactTextString(m) }
func (*GetMoneyRequest) ProtoMessage()    {}
func (*GetMoneyRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_870d51f0d487f6a4, []int{3}
}

func (m *GetMoneyRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetMoneyRequest.Unmarshal(m, b)
}
func (m *GetMoneyRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetMoneyRequest.Marshal(b, m, deterministic)
}
func (m *GetMoneyRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetMoneyRequest.Merge(m, src)
}
func (m *GetMoneyRequest) XXX_Size() int {
	return xxx_messageInfo_GetMoneyRequest.Size(m)
}
func (m *GetMoneyRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetMoneyRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetMoneyRequest proto.InternalMessageInfo

func (m *GetMoneyRequest) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func init() {
	proto.RegisterType((*Account)(nil), "proto3.Account")
	proto.RegisterType((*MoneyResquest)(nil), "proto3.MoneyResquest")
	proto.RegisterType((*MoneyResponse)(nil), "proto3.MoneyResponse")
	proto.RegisterType((*GetMoneyRequest)(nil), "proto3.GetMoneyRequest")
}

func init() { proto.RegisterFile("ATMpd/atmpd.proto", fileDescriptor_870d51f0d487f6a4) }

var fileDescriptor_870d51f0d487f6a4 = []byte{
	// 226 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x74, 0x0c, 0xf1, 0x2d,
	0x48, 0xd1, 0x4f, 0x2c, 0xc9, 0x2d, 0x48, 0xd1, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x03,
	0x53, 0xc6, 0x4a, 0x86, 0x5c, 0xec, 0x8e, 0xc9, 0xc9, 0xf9, 0xa5, 0x79, 0x25, 0x42, 0x7c, 0x5c,
	0x4c, 0x9e, 0x2e, 0x12, 0x8c, 0x0a, 0x8c, 0x1a, 0x9c, 0x41, 0x4c, 0x9e, 0x2e, 0x42, 0x62, 0x5c,
	0x6c, 0x7e, 0xa5, 0xb9, 0x49, 0xa9, 0x45, 0x12, 0x4c, 0x0a, 0x8c, 0x1a, 0xcc, 0x41, 0x50, 0x9e,
	0x92, 0x15, 0x17, 0xaf, 0x6f, 0x7e, 0x5e, 0x6a, 0x65, 0x50, 0x6a, 0x71, 0x61, 0x69, 0x6a, 0x71,
	0x89, 0x90, 0x26, 0xdc, 0x0c, 0xb0, 0x6e, 0x6e, 0x23, 0x7e, 0x88, 0x25, 0xc6, 0x7a, 0x50, 0xe1,
	0x20, 0x98, 0xbc, 0x92, 0x3a, 0x42, 0x6f, 0x41, 0x7e, 0x5e, 0x71, 0x2a, 0x92, 0x25, 0x8c, 0x28,
	0x96, 0x28, 0x72, 0xf1, 0xbb, 0xa7, 0x96, 0x40, 0xd5, 0x42, 0xac, 0x41, 0x73, 0x9f, 0xd1, 0x2f,
	0x46, 0x2e, 0x2e, 0xc7, 0x10, 0xdf, 0xe0, 0xd4, 0xa2, 0xb2, 0xcc, 0xe4, 0x54, 0x21, 0x0b, 0x2e,
	0x8e, 0x60, 0xa8, 0x0e, 0x21, 0x51, 0x98, 0x03, 0x50, 0x1c, 0x2a, 0x85, 0x21, 0x0c, 0x71, 0x83,
	0x15, 0x17, 0x97, 0x67, 0x5e, 0x72, 0x51, 0x2a, 0x99, 0x7a, 0x5d, 0x52, 0xc9, 0xd6, 0xcb, 0x01,
	0xf3, 0xa3, 0x90, 0x38, 0x4c, 0x09, 0x9a, 0xaf, 0x71, 0xe8, 0x75, 0x62, 0x8f, 0x62, 0x05, 0x47,
	0x6a, 0x12, 0x34, 0x22, 0x01, 0x01, 0x00, 0x00, 0xff, 0xff, 0x16, 0xb8, 0x88, 0xf8, 0xe4, 0x01,
	0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ATMServiceClient is the client API for ATMService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ATMServiceClient interface {
	SetMoney(ctx context.Context, in *MoneyResquest, opts ...grpc.CallOption) (*MoneyResponse, error)
	IncreMoney(ctx context.Context, in *MoneyResquest, opts ...grpc.CallOption) (*MoneyResponse, error)
	DecreMoney(ctx context.Context, in *MoneyResquest, opts ...grpc.CallOption) (*MoneyResponse, error)
	GetMoney(ctx context.Context, in *GetMoneyRequest, opts ...grpc.CallOption) (*MoneyResponse, error)
}

type aTMServiceClient struct {
	cc *grpc.ClientConn
}

func NewATMServiceClient(cc *grpc.ClientConn) ATMServiceClient {
	return &aTMServiceClient{cc}
}

func (c *aTMServiceClient) SetMoney(ctx context.Context, in *MoneyResquest, opts ...grpc.CallOption) (*MoneyResponse, error) {
	out := new(MoneyResponse)
	err := c.cc.Invoke(ctx, "/proto3.ATMService/SetMoney", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aTMServiceClient) IncreMoney(ctx context.Context, in *MoneyResquest, opts ...grpc.CallOption) (*MoneyResponse, error) {
	out := new(MoneyResponse)
	err := c.cc.Invoke(ctx, "/proto3.ATMService/IncreMoney", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aTMServiceClient) DecreMoney(ctx context.Context, in *MoneyResquest, opts ...grpc.CallOption) (*MoneyResponse, error) {
	out := new(MoneyResponse)
	err := c.cc.Invoke(ctx, "/proto3.ATMService/DecreMoney", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aTMServiceClient) GetMoney(ctx context.Context, in *GetMoneyRequest, opts ...grpc.CallOption) (*MoneyResponse, error) {
	out := new(MoneyResponse)
	err := c.cc.Invoke(ctx, "/proto3.ATMService/GetMoney", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ATMServiceServer is the server API for ATMService service.
type ATMServiceServer interface {
	SetMoney(context.Context, *MoneyResquest) (*MoneyResponse, error)
	IncreMoney(context.Context, *MoneyResquest) (*MoneyResponse, error)
	DecreMoney(context.Context, *MoneyResquest) (*MoneyResponse, error)
	GetMoney(context.Context, *GetMoneyRequest) (*MoneyResponse, error)
}

// UnimplementedATMServiceServer can be embedded to have forward compatible implementations.
type UnimplementedATMServiceServer struct {
}

func (*UnimplementedATMServiceServer) SetMoney(ctx context.Context, req *MoneyResquest) (*MoneyResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetMoney not implemented")
}
func (*UnimplementedATMServiceServer) IncreMoney(ctx context.Context, req *MoneyResquest) (*MoneyResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method IncreMoney not implemented")
}
func (*UnimplementedATMServiceServer) DecreMoney(ctx context.Context, req *MoneyResquest) (*MoneyResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DecreMoney not implemented")
}
func (*UnimplementedATMServiceServer) GetMoney(ctx context.Context, req *GetMoneyRequest) (*MoneyResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetMoney not implemented")
}

func RegisterATMServiceServer(s *grpc.Server, srv ATMServiceServer) {
	s.RegisterService(&_ATMService_serviceDesc, srv)
}

func _ATMService_SetMoney_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MoneyResquest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ATMServiceServer).SetMoney(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto3.ATMService/SetMoney",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ATMServiceServer).SetMoney(ctx, req.(*MoneyResquest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ATMService_IncreMoney_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MoneyResquest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ATMServiceServer).IncreMoney(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto3.ATMService/IncreMoney",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ATMServiceServer).IncreMoney(ctx, req.(*MoneyResquest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ATMService_DecreMoney_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MoneyResquest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ATMServiceServer).DecreMoney(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto3.ATMService/DecreMoney",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ATMServiceServer).DecreMoney(ctx, req.(*MoneyResquest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ATMService_GetMoney_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetMoneyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ATMServiceServer).GetMoney(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto3.ATMService/GetMoney",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ATMServiceServer).GetMoney(ctx, req.(*GetMoneyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ATMService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto3.ATMService",
	HandlerType: (*ATMServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SetMoney",
			Handler:    _ATMService_SetMoney_Handler,
		},
		{
			MethodName: "IncreMoney",
			Handler:    _ATMService_IncreMoney_Handler,
		},
		{
			MethodName: "DecreMoney",
			Handler:    _ATMService_DecreMoney_Handler,
		},
		{
			MethodName: "GetMoney",
			Handler:    _ATMService_GetMoney_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "ATMpd/atmpd.proto",
}
